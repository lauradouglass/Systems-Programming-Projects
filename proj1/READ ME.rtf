{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ECEC 353 HW1\
LAURA DOUGLAS 
\f1\fs26 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 14380964\
\
\ul HOW TO RUN 
\f0\fs24 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\f1\fs26 \cf0 {\listtext	0.	}Open a terminal window.\
{\listtext	0.	}Navigate to the directory where the C source file is located using the cd command.\
{\listtext	0.	}Compile the C source file using the gcc command. For example, if the source file is named main.c, you would run the command gcc main.c -o main. This will create an executable file named main in the same directory.\
{\listtext	0.	}Run the executable file by typing ./main in the terminal and press enter.\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 You should see the results of the ls -l -h command executed by the child process and then the return code of the child process will be printed.\
\
\ul DESCRIPTION\
\ulnone Both programs allow the parent process to create a child process using fork() and execvp() and execlp() are used to replace the current process image with the \'93ls\'94 command with the \'93-l\'94 and \'93-h\'94 options. The parent process then waits on the child status and then prints child return code to terminal before terminating.\
\
}